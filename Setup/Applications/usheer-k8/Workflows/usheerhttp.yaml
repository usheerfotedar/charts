harnessApiVersion: '1.0'
type: ROLLING
concurrencyStrategy: INFRA
envName: qa
failureStrategies:
- executionScope: WORKFLOW
  failureTypes:
  - APPLICATION_ERROR
  repairActionCode: ROLLBACK_WORKFLOW
  retryCount: 0
notificationRules:
- conditions:
  - FAILED
  executionScope: WORKFLOW
  notificationGroupAsExpression: false
  userGroupAsExpression: false
  userGroupIds:
  - tSS6OKRcRr2JMVRcuzTDOw
phases:
- type: KUBERNETES
  computeProviderName: kubernetes_cluster
  daemonSet: false
  infraDefinitionName: testk8
  name: Rolling
  phaseSteps:
  - type: K8S_PHASE_STEP
    name: Deploy
    steps:
    - type: HTTP
      name: HTTP
      properties:
        assertion: ''
        body: ${serviceVariable.testdata}
        executeWithPreviousSteps: false
        header: 'Content-Type: application/json'
        method: POST
        publishAsVar: false
        responseProcessingExpressions: ''
        sweepingOutputName: null
        sweepingOutputScope: null
        templateUuid: null
        templateVariables: null
        templateVersion: null
        timeoutMillis: 10000
        url: ${serviceVariable.url@prefix}-${env.name}.apps-test.aws.e1.nwie.net/v2/mobile-terminating-requests
    stepsInParallel: false
  - type: K8S_PHASE_STEP
    name: Verify
    stepsInParallel: false
  - type: K8S_PHASE_STEP
    name: Wrap Up
    steps:
    - type: EMAIL
      name: Email
      properties:
        body: Fill this in with info that will be useful. Maybe status of previous steps if possible.
        ccAddress: ''
        ignoreDeliveryFailure: false
        subject: deployment for ${service.name}-${env.name}
        toAddress: usheer.fotedar@harness.io
    stepsInParallel: false
  provisionNodes: false
  serviceName: my_k8s_service
  statefulSet: false
rollbackPhases:
- type: KUBERNETES
  computeProviderName: kubernetes_cluster
  daemonSet: false
  infraDefinitionName: testk8
  name: Rollback Rolling
  phaseNameForRollback: Rolling
  phaseSteps:
  - type: K8S_PHASE_STEP
    name: Deploy
    phaseStepNameForRollback: Deploy
    statusForRollback: SUCCESS
    steps:
    - type: K8S_DEPLOYMENT_ROLLING_ROLLBACK
      name: Rollback Deployment
    stepsInParallel: false
  - type: K8S_PHASE_STEP
    name: Wrap Up
    phaseStepNameForRollback: Wrap Up
    stepsInParallel: false
  provisionNodes: false
  serviceName: my_k8s_service
  statefulSet: false
templatized: false
